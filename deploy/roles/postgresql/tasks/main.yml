---
- name: Install postgresql
  apt:
    name:
    - postgresql
    - postgresql-contrib
    - libpq-dev
    - python3-psycopg2
    - acl
    state: present

- name: Find postgresql versions
  find:
    path: /etc/postgresql
    recurse: no
    file_type: directory
  register: postgresql_versions

- name: Allow listening from all addresses
  lineinfile:
    path: /etc/postgresql/{{ item }}/main/postgresql.conf
    state: present
    regexp: "^(.*)listen_addresses(.*)$"
    line: "listen_addresses = '*'          # what IP address(es) to listen on;"
  with_items: "{{ postgresql_versions.files|map(attribute='path')|map('basename')|list }}"
  notify: Restart postgresql

- name: Allow to connect from all addresses
  lineinfile:
    path: /etc/postgresql/{{ item }}/main/pg_hba.conf
    state: present
    regexp: "^(.*)host(.*)all(.*)all(.*)127.0.0.1/32(.*)md5(.*)$"
    line: "host    all             all             0.0.0.0/0            md5"
  with_items: "{{ postgresql_versions.files|map(attribute='path')|map('basename')|list }}"
  notify: Restart postgresql

- name: Ensure database is created
  become: yes
  become_user: postgres
  postgresql_db: name={{dbname}}

- name: Ensure user has access to database
  become: yes
  become_user: postgres
  postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

- name: Ensure user does not have unnecessary privilege
  become: yes
  become_user: postgres
  postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB

- name: Ensure no other user can access the database
  become: yes
  become_user: postgres
  postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent

- name: Restart postgresql
  service: name=postgresql state=restarted enabled=yes
